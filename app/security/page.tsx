'use client';

import { useEffect, useRef, useState } from "react";
import { HomeKitButton } from "@/components/HomeKitButton";

export default function SecurityPage() {
  const imageRef = useRef<HTMLImageElement | null>(null);
  const socketRef = useRef<WebSocket | null>(null);
  const [isConnected, setIsConnected] = useState(false);
  const [streaming, setStreaming] = useState(false);

  useEffect(() => {
    socketRef.current = new WebSocket("ws://0.0.0.0:8765"); // –∏–ª–∏ "ws://localhost:8765"

    socketRef.current.onopen = () => {
      setIsConnected(true);
      console.log("WebSocket –ø–æ–¥–∫–ª—é—á–µ–Ω");
    };

    socketRef.current.onclose = () => {
      setIsConnected(false);
      console.log("WebSocket –æ—Ç–∫–ª—é—á–µ–Ω");
    };

    socketRef.current.onmessage = (event) => {
      const base64Image = event.data as string; // –Ø–≤–Ω–æ —É–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ event.data ‚Äî —Å—Ç—Ä–æ–∫–∞
    
      if (imageRef.current && base64Image) {
        imageRef.current.src = `data:image/jpeg;base64,${base64Image}`; // –î–æ–±–∞–≤–ª–µ–Ω—ã –∫–∞–≤—ã—á–∫–∏ ``
      }
    };

    return () => {
      socketRef.current?.close();
    };
  }, []);

  return (
    <div className="container mx-auto max-w-2xl space-y-8">
      <div className="flex items-center gap-4">
        <HomeKitButton label="–¥–æ–º" href="/">
          <span className="text-2xl">üè†</span>
        </HomeKitButton>
        <HomeKitButton label="–û—Ö—Ä–∞–Ω–∞" href="/security" isActive>
          <span className="text-2xl">üîí</span>
        </HomeKitButton>
      </div>

      <div className="p-4 bg-white/90 backdrop-blur-md rounded-lg">
        <div className="aspect-video bg-gray-100 rounded-lg flex items-center justify-center mb-4">
          <img
            ref={imageRef}
            alt="–í–∏–¥–µ–æ –ø–æ—Ç–æ–∫"
            className="w-full h-full object-cover"
          />
        </div>
        <h3 className="font-medium">–ö–æ—Ä–∏–¥–æ—Ä</h3>
        <p className="text-sm text-gray-500">–ü—Ä—è–º–æ–π —ç—Ñ–∏—Ä</p>
        <p>{isConnected ? "–ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket" : "–û–∂–∏–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è..."}</p>
      </div>
    </div>
  );
}